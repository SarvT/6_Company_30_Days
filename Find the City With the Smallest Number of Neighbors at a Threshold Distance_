class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        vector<vector<int>>vec(n, vector<int>(n, 1e9));
        int ans=-1, maxi=n;
        for(auto it: edges){
            vec[it[0]][it[1]]=it[2];
            vec[it[1]][it[0]]=it[2];
        }
        for(int i=0; i<n; i++)vec[i][i]=0;
        for(int i=0; i<n; i++){
            for(int j=0; j<n; j++){
                for(int k=0; k<n; k++){
                    if(vec[j][i]==1e9 || vec[i][k]==1e9)continue;
                    vec[j][k]=min(vec[j][k], vec[j][i]+vec[i][k]);
                }
            }
        }
        for(int i=0; i<n; i++){
            int cnt=0; 
            for(int j=0; j<n; j++)if(vec[i][j]<=distanceThreshold)cnt++;
            if(maxi>=cnt){
                maxi=cnt;
                ans=i;
            }
        }
        return ans;
    }
};
