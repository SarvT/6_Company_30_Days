class Solution {
public:
    int peopleAwareOfSecret(int n, int delay, int forget) {
        long long int mod = 1e9 + 7;
        vector<long long int> toIncrement (n + 1, 0); 
        vector<long long int> toDecrement (n + 1, 0); 
        
        toIncrement[1] = 1;
        
        long long int currentlyKnownTo = 0;
        for (int i = 1; i <= n; i++) {
            if (toIncrement[i] > 0) { 
                for (int j = i + delay; j < (i + forget) && j <= n; j++) {
                    toIncrement[j] += toIncrement[i];
                    toIncrement[j] = toIncrement[j] % mod;
                }
                if ((i + forget) <= n) {
                    toDecrement[i + forget] = toIncrement[i];
                    toDecrement[i + forget] = toDecrement[i + forget] % mod;
                }
            }
            
            currentlyKnownTo += toIncrement[i];

            currentlyKnownTo -= toDecrement[i];
        }
        return currentlyKnownTo % mod;
    }
};
