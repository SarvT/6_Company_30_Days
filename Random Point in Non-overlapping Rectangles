class Solution {
public:
    vector<int> area;
    vector<vector<int>> vec;
int fnc(vector<int>& it){
        return (it[2]-it[0]+1)*(it[3]-it[1]+1);
    }
    Solution(vector<vector<int>>& rects) {
        vec = rects;
        int total_area=0;
        for(auto it : rects){
            total_area += fnc(it); 
            area.push_back(total_area);
        }
    }
    
    vector<int> pick() {
        int x = random()%area.back() + 1;
        int idx = lower_bound(area.begin(), area.end(), x) - area.begin();

        auto r = vec[idx];
        x = random()%(r[2] - r[0] + 1) + r[0];
        int y = random()%(r[3] - r[1] + 1) + r[1];
        return {x,y};
    }
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution* obj = new Solution(rects);
 * vector<int> param_1 = obj->pick();
 */
